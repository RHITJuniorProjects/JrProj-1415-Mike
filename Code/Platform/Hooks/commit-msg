#!/usr/bin/python
import sys
import re
import subprocess
import time
from firebase import firebase


##
#   These fields are populated by the installer
##
projectID = ''
githubID = 'aj-michael'

prodUrl = 'https://henry-production.firebaseio.com'
stagUrl = 'https://henry-staging.firebaseio.com'
testUrl = 'https://henry-test.firebaseio.com'


def readCommit(path):
    with open(path,'r') as msgfile:
        msg = msgfile.read()
    return msg.strip()
    

def getLoC():
    command = 'git diff --cached --shortstat'.split(' ')
    pipe = subprocess.Popen(command,stdout=subprocess.PIPE)
    pair = pipe.communicate()[0]
    vals = pair.replace(' ','').split(',') 
    if len(vals) == 3:
        vals = vals[1:]
    elif len(vals) == 2:
        vals = [vals[1]]+['0'] if 'insertion' in pair else ['0']+[vals[1]]
    elif len(vals) == 1:
        raise Exception('HENRY: Unexpected output of `git diff --cached --shortstat`')
    else:
        vals = ['0','0']
    nums = map(lambda x: int(x[0]),vals) 
    return nums[0] - nums[1]


def parse(msg):
    hoursRE = r"\[hours:([0-9]+)\]"
    milestoneRE = r"\[milestone:([0-9]+)\]"
    taskRE = r"\[task:([0-9]+)\]"
    statusRE = r"\[status:([0-9]+)\]"

    rexs = [hoursRE,milestoneRE,taskRE,statusRE]
    results = [re.search(rex,msg) for rex in rexs]
    results = [res.group(1) if res != None else None for res in results]
    return results


def getEmail():
    command = 'git config --global user.email'.split(' ')
    pipe = subprocess.Popen(command,stdout=subprocess.PIPE)
    return pipe.communicate()[0].strip()
    

def getUID(gituser,ref):
    users = ref.get('/users',None)
    filteredusers = {u:users[u] for u in users if 'github' in users[u]}
    try:
        uid = [u for u in filteredusers if filteredusers[u]['github']==gituser][0]
    except:
        raise Exception('HENRY: Invalid username, commit failed')
    return uid


def getTime():
    return time.time()*1000


def writeCommit(ref,msg,project,uid,hours,milestone,task,status,loc,ts):
    path = '/commits'
    ref.post(path,{'hours':hours,'user':uid,'lines_of_code':loc,'message':msg,'timestamp':ts})


if __name__ == '__main__':
    # set this to the correct database
    ref = firebase.FirebaseApplication(testUrl, None)

    email = getEmail()
    uid = getUID(githubID,ref)
    msg = readCommit(sys.argv[1])
    [hours,milestone,task,status],loc = parse(msg),getLoC()
    ts = getTime()

    writeCommit(ref,msg,None,uid,hours,milestone,task,status,loc,ts)
    
    #raise Exception('Reached end, prevents commit from executing')
